name: Docker

on:
  schedule:
    - cron: '26 9 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_ENV: ${{ github.workspace }}/.env


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@1a22e17968bb5f9192b82a39d3ffb322627f5169 #v4.0.1
        with:
          cosign-release: 'v1.13.1'
          
      # set up Docker buildx environment
      - name: Setup enviroment
        run: |
          echo "DOCKER_BUILDKIT=1" >> "$GITHUB_ENV"
          echo "BUILDKIT_PROGRESS=plain" >> "$GITHUB_ENV"
          
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@a946f06b5ddbde456d0115dc585e8dc3c7a0c3e0
            
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
<<<<<<< HEAD:.github/workflows/CD.yml
        run: |
          echo "DOCKER_USERNAME=${{ github.actor }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        env:
=======
        uses: docker/login-action@40891eba8c2bcd1309b07ba8b11232f313e86779
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
>>>>>>> e4308f407baad4feaf65020a05ed72e5147ebd97:.github/workflows/CD
          GITHUB_ENV: ${{ github.workspace }}/.env

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        run: |
          echo "IMAGES=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e
        env:
<<<<<<< HEAD:.github/workflows/CD.yml
=======
          IMAGES: ${{ steps.meta.outputs.tags }}
>>>>>>> e4308f407baad4feaf65020a05ed72e5147ebd97:.github/workflows/CD
          GITHUB_ENV: ${{ github.workspace }}/.env


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
          
      - name: Build and push Docker image
        id: build-and-push
<<<<<<< HEAD:.github/workflows/CD.yml
        run: |
          docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
            --context .
            --push ${{ github.event_name != 'pull_request' }}
            --tags ${{ steps.meta.outputs.tags }}
            --labels ${{ steps.meta.outputs.labels }}
            --cache-from type=gha
            --cache-to type=gha,mode=max
=======
        uses: docker/build-push-action@91df6b874e498451163feb47610c87c4a218c1ee
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
>>>>>>> e4308f407baad4feaf65020a05ed72e5147ebd97:.github/workflows/CD
        env:
          GITHUB_ENV: ${{ github.workspace }}/.env


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
