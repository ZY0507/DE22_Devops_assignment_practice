name: Docker
on:
  schedule:
    - cron: '30 2 * * 3'
  push:
    branches:
      - main
    tags: 
      - 'v[0-9]+.[0-9]+.[0-9]'
  pull_request:
    branches:
      - main
      
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_ENV: ${{ github.workspace }}/.env


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@1a22e17968bb5f9192b82a39d3ffb322627f5169 #v4.0.1
        with:
          cosign-release: 'v1.13.1'

      - name: Setup environment
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "BUILDKIT_PROGRESS=plain" >> $GITHUB_ENV
          
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@a946f06b5ddbde456d0115dc585e8dc3c7a0c3e0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@91df6b874e498451163feb47610c87c4a218c1ee
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
